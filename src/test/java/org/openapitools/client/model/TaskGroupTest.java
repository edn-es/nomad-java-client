/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.6
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.Affinity;
import org.openapitools.client.model.Constraint;
import org.openapitools.client.model.Consul;
import org.openapitools.client.model.DisconnectStrategy;
import org.openapitools.client.model.EphemeralDisk;
import org.openapitools.client.model.MigrateStrategy;
import org.openapitools.client.model.NetworkResource;
import org.openapitools.client.model.ReschedulePolicy;
import org.openapitools.client.model.RestartPolicy;
import org.openapitools.client.model.ScalingPolicy;
import org.openapitools.client.model.Service;
import org.openapitools.client.model.Spread;
import org.openapitools.client.model.Task;
import org.openapitools.client.model.UpdateStrategy;
import org.openapitools.client.model.VolumeRequest;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for TaskGroup
 */
public class TaskGroupTest {
    private final TaskGroup model = new TaskGroup();

    /**
     * Model tests for TaskGroup
     */
    @Test
    public void testTaskGroup() {
        // TODO: test TaskGroup
    }

    /**
     * Test the property 'affinities'
     */
    @Test
    public void affinitiesTest() {
        // TODO: test affinities
    }

    /**
     * Test the property 'constraints'
     */
    @Test
    public void constraintsTest() {
        // TODO: test constraints
    }

    /**
     * Test the property 'consul'
     */
    @Test
    public void consulTest() {
        // TODO: test consul
    }

    /**
     * Test the property 'count'
     */
    @Test
    public void countTest() {
        // TODO: test count
    }

    /**
     * Test the property 'disconnect'
     */
    @Test
    public void disconnectTest() {
        // TODO: test disconnect
    }

    /**
     * Test the property 'ephemeralDisk'
     */
    @Test
    public void ephemeralDiskTest() {
        // TODO: test ephemeralDisk
    }

    /**
     * Test the property 'maxClientDisconnect'
     */
    @Test
    public void maxClientDisconnectTest() {
        // TODO: test maxClientDisconnect
    }

    /**
     * Test the property 'meta'
     */
    @Test
    public void metaTest() {
        // TODO: test meta
    }

    /**
     * Test the property 'migrate'
     */
    @Test
    public void migrateTest() {
        // TODO: test migrate
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'networks'
     */
    @Test
    public void networksTest() {
        // TODO: test networks
    }

    /**
     * Test the property 'preventRescheduleOnLost'
     */
    @Test
    public void preventRescheduleOnLostTest() {
        // TODO: test preventRescheduleOnLost
    }

    /**
     * Test the property 'reschedulePolicy'
     */
    @Test
    public void reschedulePolicyTest() {
        // TODO: test reschedulePolicy
    }

    /**
     * Test the property 'restartPolicy'
     */
    @Test
    public void restartPolicyTest() {
        // TODO: test restartPolicy
    }

    /**
     * Test the property 'scaling'
     */
    @Test
    public void scalingTest() {
        // TODO: test scaling
    }

    /**
     * Test the property 'services'
     */
    @Test
    public void servicesTest() {
        // TODO: test services
    }

    /**
     * Test the property 'shutdownDelay'
     */
    @Test
    public void shutdownDelayTest() {
        // TODO: test shutdownDelay
    }

    /**
     * Test the property 'spreads'
     */
    @Test
    public void spreadsTest() {
        // TODO: test spreads
    }

    /**
     * Test the property 'stopAfterClientDisconnect'
     */
    @Test
    public void stopAfterClientDisconnectTest() {
        // TODO: test stopAfterClientDisconnect
    }

    /**
     * Test the property 'tasks'
     */
    @Test
    public void tasksTest() {
        // TODO: test tasks
    }

    /**
     * Test the property 'update'
     */
    @Test
    public void updateTest() {
        // TODO: test update
    }

    /**
     * Test the property 'volumes'
     */
    @Test
    public void volumesTest() {
        // TODO: test volumes
    }

}
