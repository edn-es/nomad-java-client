/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.6
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import io.nomadproject.client.model.Action;
import io.nomadproject.client.model.Affinity;
import io.nomadproject.client.model.Constraint;
import io.nomadproject.client.model.Consul;
import io.nomadproject.client.model.DispatchPayloadConfig;
import io.nomadproject.client.model.LogConfig;
import io.nomadproject.client.model.Resources;
import io.nomadproject.client.model.RestartPolicy;
import io.nomadproject.client.model.ScalingPolicy;
import io.nomadproject.client.model.Service;
import io.nomadproject.client.model.TaskArtifact;
import io.nomadproject.client.model.TaskCSIPluginConfig;
import io.nomadproject.client.model.TaskLifecycle;
import io.nomadproject.client.model.Template;
import io.nomadproject.client.model.Vault;
import io.nomadproject.client.model.VolumeMount;
import io.nomadproject.client.model.WorkloadIdentity;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Task
 */
public class TaskTest {
    private final Task model = new Task();

    /**
     * Model tests for Task
     */
    @Test
    public void testTask() {
        // TODO: test Task
    }

    /**
     * Test the property 'actions'
     */
    @Test
    public void actionsTest() {
        // TODO: test actions
    }

    /**
     * Test the property 'affinities'
     */
    @Test
    public void affinitiesTest() {
        // TODO: test affinities
    }

    /**
     * Test the property 'artifacts'
     */
    @Test
    public void artifactsTest() {
        // TODO: test artifacts
    }

    /**
     * Test the property 'csIPluginConfig'
     */
    @Test
    public void csIPluginConfigTest() {
        // TODO: test csIPluginConfig
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'constraints'
     */
    @Test
    public void constraintsTest() {
        // TODO: test constraints
    }

    /**
     * Test the property 'consul'
     */
    @Test
    public void consulTest() {
        // TODO: test consul
    }

    /**
     * Test the property 'dispatchPayload'
     */
    @Test
    public void dispatchPayloadTest() {
        // TODO: test dispatchPayload
    }

    /**
     * Test the property 'driver'
     */
    @Test
    public void driverTest() {
        // TODO: test driver
    }

    /**
     * Test the property 'env'
     */
    @Test
    public void envTest() {
        // TODO: test env
    }

    /**
     * Test the property 'identities'
     */
    @Test
    public void identitiesTest() {
        // TODO: test identities
    }

    /**
     * Test the property 'identity'
     */
    @Test
    public void identityTest() {
        // TODO: test identity
    }

    /**
     * Test the property 'killSignal'
     */
    @Test
    public void killSignalTest() {
        // TODO: test killSignal
    }

    /**
     * Test the property 'killTimeout'
     */
    @Test
    public void killTimeoutTest() {
        // TODO: test killTimeout
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'leader'
     */
    @Test
    public void leaderTest() {
        // TODO: test leader
    }

    /**
     * Test the property 'lifecycle'
     */
    @Test
    public void lifecycleTest() {
        // TODO: test lifecycle
    }

    /**
     * Test the property 'logConfig'
     */
    @Test
    public void logConfigTest() {
        // TODO: test logConfig
    }

    /**
     * Test the property 'meta'
     */
    @Test
    public void metaTest() {
        // TODO: test meta
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'resources'
     */
    @Test
    public void resourcesTest() {
        // TODO: test resources
    }

    /**
     * Test the property 'restartPolicy'
     */
    @Test
    public void restartPolicyTest() {
        // TODO: test restartPolicy
    }

    /**
     * Test the property 'scalingPolicies'
     */
    @Test
    public void scalingPoliciesTest() {
        // TODO: test scalingPolicies
    }

    /**
     * Test the property 'services'
     */
    @Test
    public void servicesTest() {
        // TODO: test services
    }

    /**
     * Test the property 'shutdownDelay'
     */
    @Test
    public void shutdownDelayTest() {
        // TODO: test shutdownDelay
    }

    /**
     * Test the property 'templates'
     */
    @Test
    public void templatesTest() {
        // TODO: test templates
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'vault'
     */
    @Test
    public void vaultTest() {
        // TODO: test vault
    }

    /**
     * Test the property 'volumeMounts'
     */
    @Test
    public void volumeMountsTest() {
        // TODO: test volumeMounts
    }

}
