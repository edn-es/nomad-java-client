/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.6
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DisconnectStrategy
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-16T11:56:02.367141Z[Etc/UTC]")
public class DisconnectStrategy {
  public static final String SERIALIZED_NAME_LOST_AFTER = "LostAfter";
  @SerializedName(SERIALIZED_NAME_LOST_AFTER)
  private Long lostAfter;

  public static final String SERIALIZED_NAME_RECONCILE = "Reconcile";
  @SerializedName(SERIALIZED_NAME_RECONCILE)
  private String reconcile;

  public static final String SERIALIZED_NAME_REPLACE = "Replace";
  @SerializedName(SERIALIZED_NAME_REPLACE)
  private Boolean replace;

  public static final String SERIALIZED_NAME_STOP_ON_CLIENT_AFTER = "StopOnClientAfter";
  @SerializedName(SERIALIZED_NAME_STOP_ON_CLIENT_AFTER)
  private Long stopOnClientAfter;


  public DisconnectStrategy lostAfter(Long lostAfter) {
    
    this.lostAfter = lostAfter;
    return this;
  }

   /**
   * Get lostAfter
   * @return lostAfter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getLostAfter() {
    return lostAfter;
  }


  public void setLostAfter(Long lostAfter) {
    this.lostAfter = lostAfter;
  }


  public DisconnectStrategy reconcile(String reconcile) {
    
    this.reconcile = reconcile;
    return this;
  }

   /**
   * Get reconcile
   * @return reconcile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReconcile() {
    return reconcile;
  }


  public void setReconcile(String reconcile) {
    this.reconcile = reconcile;
  }


  public DisconnectStrategy replace(Boolean replace) {
    
    this.replace = replace;
    return this;
  }

   /**
   * Get replace
   * @return replace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getReplace() {
    return replace;
  }


  public void setReplace(Boolean replace) {
    this.replace = replace;
  }


  public DisconnectStrategy stopOnClientAfter(Long stopOnClientAfter) {
    
    this.stopOnClientAfter = stopOnClientAfter;
    return this;
  }

   /**
   * Get stopOnClientAfter
   * @return stopOnClientAfter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getStopOnClientAfter() {
    return stopOnClientAfter;
  }


  public void setStopOnClientAfter(Long stopOnClientAfter) {
    this.stopOnClientAfter = stopOnClientAfter;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DisconnectStrategy disconnectStrategy = (DisconnectStrategy) o;
    return Objects.equals(this.lostAfter, disconnectStrategy.lostAfter) &&
        Objects.equals(this.reconcile, disconnectStrategy.reconcile) &&
        Objects.equals(this.replace, disconnectStrategy.replace) &&
        Objects.equals(this.stopOnClientAfter, disconnectStrategy.stopOnClientAfter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lostAfter, reconcile, replace, stopOnClientAfter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DisconnectStrategy {\n");
    sb.append("    lostAfter: ").append(toIndentedString(lostAfter)).append("\n");
    sb.append("    reconcile: ").append(toIndentedString(reconcile)).append("\n");
    sb.append("    replace: ").append(toIndentedString(replace)).append("\n");
    sb.append("    stopOnClientAfter: ").append(toIndentedString(stopOnClientAfter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

