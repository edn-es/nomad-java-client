/*
 * Nomad
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.7.6
 * Contact: support@hashicorp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.nomadproject.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * JobSubmission
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-16T11:56:02.367141Z[Etc/UTC]")
public class JobSubmission {
  public static final String SERIALIZED_NAME_FORMAT = "Format";
  @SerializedName(SERIALIZED_NAME_FORMAT)
  private String format;

  public static final String SERIALIZED_NAME_SOURCE = "Source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_VARIABLE_FLAGS = "VariableFlags";
  @SerializedName(SERIALIZED_NAME_VARIABLE_FLAGS)
  private Map<String, String> variableFlags = null;

  public static final String SERIALIZED_NAME_VARIABLES = "Variables";
  @SerializedName(SERIALIZED_NAME_VARIABLES)
  private String variables;


  public JobSubmission format(String format) {
    
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFormat() {
    return format;
  }


  public void setFormat(String format) {
    this.format = format;
  }


  public JobSubmission source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSource() {
    return source;
  }


  public void setSource(String source) {
    this.source = source;
  }


  public JobSubmission variableFlags(Map<String, String> variableFlags) {
    
    this.variableFlags = variableFlags;
    return this;
  }

  public JobSubmission putVariableFlagsItem(String key, String variableFlagsItem) {
    if (this.variableFlags == null) {
      this.variableFlags = new HashMap<String, String>();
    }
    this.variableFlags.put(key, variableFlagsItem);
    return this;
  }

   /**
   * Get variableFlags
   * @return variableFlags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getVariableFlags() {
    return variableFlags;
  }


  public void setVariableFlags(Map<String, String> variableFlags) {
    this.variableFlags = variableFlags;
  }


  public JobSubmission variables(String variables) {
    
    this.variables = variables;
    return this;
  }

   /**
   * Get variables
   * @return variables
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVariables() {
    return variables;
  }


  public void setVariables(String variables) {
    this.variables = variables;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobSubmission jobSubmission = (JobSubmission) o;
    return Objects.equals(this.format, jobSubmission.format) &&
        Objects.equals(this.source, jobSubmission.source) &&
        Objects.equals(this.variableFlags, jobSubmission.variableFlags) &&
        Objects.equals(this.variables, jobSubmission.variables);
  }

  @Override
  public int hashCode() {
    return Objects.hash(format, source, variableFlags, variables);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobSubmission {\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    variableFlags: ").append(toIndentedString(variableFlags)).append("\n");
    sb.append("    variables: ").append(toIndentedString(variables)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

